sensorStop
;After the command is acknowledged, a new config can
;be provided and sensor can be restarted
flushCfg
;This command should be issued after 'sensorStop'
;command to flush the old configuration and provide a
;new one.
dfeDataOutputMode 1
;Reboot the board to try config with different set of values
;in this command
channelCfg 15 3 0
;Reboot the board to try config with different set of values
;in this command
adcCfg 2 1
;<numADCBits>
; Number of ADC bits (0 for 12-bits,
;1 for 14-bits and 2 for 16-bits)
;<adcOutputFmt>
; Output format :
; 0 - real
; 1 - complex 1x (image band
;filtered output)
; 2 - complex 2x (image band
;visible))
;For complex 1x mode, DFE applies IQ imbalance correction and then downsample the signal. So it allows 80%-90% of the signal bandwidth compare to the sampling rate.
;For complex 2x mode, only half of the bandwidth (0~fs/2) is occupied by the signal, and the other half (the image band) can be occupied by other noise source like interference. So complex 2x mode is mainly designed for applications that needs interference cancellation.
adcbufCfg -1 0 0 1 0
;adcBuf hardware config. The values in this command can
;be changed between sensorStop and sensorStart.
profileCfg 0 60.25 7 6 57 0 0 65 1 100 2000 0 0 40
;<profileId>
; profile Identifier
;<startFreq>
; "Frequency Start" in GHz (float
;values allowed)
;<idleTime>
; "Idle Time" in u-sec (float values
;allowed)
;<adcStartTime>
; "ADC Valid Start Time" in u-sec
;(float values allowed)
;<rampEndTime>
;"Ramp End Time" in u-sec (float
;values allowed)
;<txOutPower>
; Tx output power back-off code for
;tx antennas
;<txPhaseShifter>
; tx phase shifter for tx antennas
;<freqSlopeConst>
; "Frequency slope" for the chirp in
;MHz/usec (float values allowed)
;<txStartTime>
;"TX Start Time" in u-sec (float
;values allowed)
;<numAdcSamples>
; number of ADC samples collected
;during "ADC Sampling Time" as
;shown in the chirp diagram above
;<digOutSampleRate>
; ADC sampling frequency in ksps.
;(<numAdcSamples> /
;<digOutSampleRate> = "ADC
;Sampling Time")
;<hpfCornerFreq1>
; HPF1 (High Pass Filter 1) corner
;frequency
;<hpfCornerFreq2>
; HPF2 (High Pass Filter 2) corner
;frequency
;<rxGain>
; OR'ed value of RX gain in dB and
;RF gain target (See mmwavelink
;doxgen for details)
chirpCfg 0 0 0 0 0 0 0 1
;Why simple things need declaration
frameCfg 0 0 2 0 50 1 0
;<chirp start index>
;<chirp end index>
;<number of loops>
;<number of frames> 0 means realtime data
;<frame periodicity in ms>
;<trigger select>
; 1: Software trigger
; 2: Hardware trigger.
;Frame trigger delay in ms (float
;values allowed)
lowPower 0 1
;The values in this command should not change between
;sensorStop and sensorStart.
guiMonitor 0 0 0 0 1
;Plot config message to datapath.
calibDcRangeSig -1 0 0 0 0
;Antenna coupling signature dominates the range bins
;close to the radar. These are the bins in the range FFT
;output located around DC.
vitalSignsCfg 0.3 0.9 256 512 4 0.1 0.05 100000 300000
;<start range> unit-meter
;<end range>
;<breath waveform size>
;<heart-rate wave form size>
;<rx-antenna to process>
;<alpha filter to breath>
;<alpha filter to heart-rate>
;<fft scale>
;<fft scale>
motionDetection 1 20 0.04 0
;The purpose of this block is to discard the data segments that might be corrupted by large amplitude movements. The heart waveform is divided into segment of L samples. If the energy within this data segment exceeds a user-defined threshold ETh then all the samples are discarded from the time-domain heart waveform.
;<enable>
;<data segment size>
;<threshold>
;<gain control>
sensorStart
;This function triggers the transmission
;of the frames as per the frame and chirp configuration. By
;default, this function also sends the configuration to the
;mmWave Front End and the processing chain.

